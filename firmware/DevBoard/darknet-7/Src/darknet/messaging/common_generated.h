// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_COMMON_DARKNET7_H_
#define FLATBUFFERS_GENERATED_COMMON_DARKNET7_H_

#include "flatbuffers/flatbuffers.h"

namespace darknet7 {

enum MsgType {
  MsgType_RESERVED = 0,
  MsgType_SETUP_AP = 1,
  MsgType_GENERIC_RESPONSE = 2,
  MsgType_MIN = MsgType_RESERVED,
  MsgType_MAX = MsgType_GENERIC_RESPONSE
};

inline const MsgType (&EnumValuesMsgType())[3] {
  static const MsgType values[] = {
    MsgType_RESERVED,
    MsgType_SETUP_AP,
    MsgType_GENERIC_RESPONSE
  };
  return values;
}

inline const char * const *EnumNamesMsgType() {
  static const char * const names[] = {
    "RESERVED",
    "SETUP_AP",
    "GENERIC_RESPONSE",
    nullptr
  };
  return names;
}

inline const char *EnumNameMsgType(MsgType e) {
  const size_t index = static_cast<int>(e);
  return EnumNamesMsgType()[index];
}

enum WifiMode {
  WifiMode_OPEN = 0,
  WifiMode_WPA2 = 1,
  WifiMode_WPA = 2,
  WifiMode_MIN = WifiMode_OPEN,
  WifiMode_MAX = WifiMode_WPA
};

inline const WifiMode (&EnumValuesWifiMode())[3] {
  static const WifiMode values[] = {
    WifiMode_OPEN,
    WifiMode_WPA2,
    WifiMode_WPA
  };
  return values;
}

inline const char * const *EnumNamesWifiMode() {
  static const char * const names[] = {
    "OPEN",
    "WPA2",
    "WPA",
    nullptr
  };
  return names;
}

inline const char *EnumNameWifiMode(WifiMode e) {
  const size_t index = static_cast<int>(e);
  return EnumNamesWifiMode()[index];
}

}  // namespace darknet7

#endif  // FLATBUFFERS_GENERATED_COMMON_DARKNET7_H_
