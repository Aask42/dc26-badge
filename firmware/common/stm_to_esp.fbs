include "common.fbs";

namespace darknet7;

union STMToESPAny 
{ 					
	SetupAP
	,StopAP
	,BytesToFromAddress
	,DisplayMessage
	,ESPRequest
	,CommunicationStatusRequest
	,BLEGetInfectionData
	,BLEAdvertise
	,BLESetDeviceName
	,BLESetInfectionData
	,BLESetExposureData
	,BLESetCureData
	,BLEScanForDevices
	,BLEPairWithDevice
	,BLESendPINConfirmation
	,BLESendDataToDevice
	,BLESendDisplayMessage
	,BLESendDNPairComplete
	,BLEDisconnect
	,WiFiScan
	,WiFiNPCInteract
}

table WiFiNPCInteract {
	bssid:[ubyte]; //bssid ap to interact with
	ssid:string;
	type:byte;  // 0 = LIST 1 = INTERACT
	npcname:string; //npc name
	action:string; //IF LIST unused, if INTERACT its action(verb) choosen 
}

table WiFiScan {
	filter:WiFiScanFilter;
}

table SetupAP {
	ssid:string;
	passwd:string;
	mode:WifiMode;
}

table StopAP {
	
}

table CommunicationStatusRequest {
}

table BLEAdvertise {
	state:bool;
}

table BLEGetInfectionData {

}

table BLESetDeviceName {
	name:string;
}

table BLESetExposureData {
	vectors:uint16;
}

table BLESetInfectionData {
	vectors:uint16;
}

table BLESetCureData {
	vectors:uint16;
}

table BLEScanForDevices {
	filter:uint8;
}

table BLEPairWithDevice {
	addr:string;
}

table BLESendPINConfirmation {
	confirm:bool;
}

table BLESendDataToDevice {
	data:string;
}

table BLESendDisplayMessage {
	data:string;
}

table BLESendDNPairComplete {
}

table BLEDisconnect {

}

enum ESPRequestType : byte { SYSTEM_INFO }

table ESPRequest {
	requestType:ESPRequestType;
}

table STMToESPRequest {
	msgInstanceID:uint32;
	Msg:STMToESPAny;
}

root_type STMToESPRequest;

